{"remainingRequest":"C:\\Users\\Dazek\\Desktop\\app\\app1\\app1\\vue-cli\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\Dazek\\Desktop\\app\\app1\\app1\\vue-cli\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Dazek\\Desktop\\app\\app1\\app1\\vue-cli\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Dazek\\Desktop\\app\\app1\\app1\\vue-cli\\src\\components\\FormComponent.vue?vue&type=template&id=56b15c19&","dependencies":[{"path":"C:\\Users\\Dazek\\Desktop\\app\\app1\\app1\\vue-cli\\src\\components\\FormComponent.vue","mtime":1555788175791},{"path":"C:\\Users\\Dazek\\Desktop\\app\\app1\\app1\\vue-cli\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Dazek\\Desktop\\app\\app1\\app1\\vue-cli\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\Dazek\\Desktop\\app\\app1\\app1\\vue-cli\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Dazek\\Desktop\\app\\app1\\app1\\vue-cli\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", { staticClass: \"col-md-12 form\" }, [\n    _c(\"div\", { staticClass: \"container\" }, [\n      _c(\"div\", { staticClass: \"row\" }, [\n        _c(\"div\", { staticClass: \"col-sm-8 offset-sm-2\" }, [\n          _c(\"div\", [\n            _c(\"h2\", [_vm._v(\"Register now\")]),\n            _c(\"p\", { staticStyle: { \"padding-bottom\": \"30px\" } }, [\n              _vm._v(\" For more features âœ” \")\n            ]),\n            _c(\n              \"form\",\n              {\n                on: {\n                  submit: function($event) {\n                    $event.preventDefault()\n                    return _vm.handleSubmit($event)\n                  }\n                }\n              },\n              [\n                _c(\"div\", { staticClass: \"form-group\" }, [\n                  _c(\"label\", { attrs: { for: \"firstName\" } }, [\n                    _vm._v(\"First Name\")\n                  ]),\n                  _c(\"input\", {\n                    directives: [\n                      {\n                        name: \"model\",\n                        rawName: \"v-model\",\n                        value: _vm.user.firstName,\n                        expression: \"user.firstName\"\n                      }\n                    ],\n                    staticClass: \"form-control\",\n                    class: {\n                      \"is-invalid\":\n                        _vm.submitted && _vm.$v.user.firstName.$error\n                    },\n                    attrs: { type: \"text\", id: \"firstName\", name: \"firstName\" },\n                    domProps: { value: _vm.user.firstName },\n                    on: {\n                      input: function($event) {\n                        if ($event.target.composing) {\n                          return\n                        }\n                        _vm.$set(_vm.user, \"firstName\", $event.target.value)\n                      }\n                    }\n                  }),\n                  _vm.submitted && !_vm.$v.user.firstName.required\n                    ? _c(\"div\", { staticClass: \"invalid-feedback\" }, [\n                        _vm._v(\"First Name is required\")\n                      ])\n                    : _vm._e()\n                ]),\n                _c(\"div\", { staticClass: \"form-group\" }, [\n                  _c(\"label\", { attrs: { for: \"lastName\" } }, [\n                    _vm._v(\"Last Name\")\n                  ]),\n                  _c(\"input\", {\n                    directives: [\n                      {\n                        name: \"model\",\n                        rawName: \"v-model\",\n                        value: _vm.user.lastName,\n                        expression: \"user.lastName\"\n                      }\n                    ],\n                    staticClass: \"form-control\",\n                    class: {\n                      \"is-invalid\": _vm.submitted && _vm.$v.user.lastName.$error\n                    },\n                    attrs: { type: \"text\", id: \"lastName\", name: \"lastName\" },\n                    domProps: { value: _vm.user.lastName },\n                    on: {\n                      input: function($event) {\n                        if ($event.target.composing) {\n                          return\n                        }\n                        _vm.$set(_vm.user, \"lastName\", $event.target.value)\n                      }\n                    }\n                  }),\n                  _vm.submitted && !_vm.$v.user.lastName.required\n                    ? _c(\"div\", { staticClass: \"invalid-feedback\" }, [\n                        _vm._v(\"Last Name is required\")\n                      ])\n                    : _vm._e()\n                ]),\n                _c(\"div\", { staticClass: \"form-group\" }, [\n                  _c(\"label\", { attrs: { for: \"email\" } }, [_vm._v(\"Email\")]),\n                  _c(\"input\", {\n                    directives: [\n                      {\n                        name: \"model\",\n                        rawName: \"v-model\",\n                        value: _vm.user.email,\n                        expression: \"user.email\"\n                      }\n                    ],\n                    staticClass: \"form-control\",\n                    class: {\n                      \"is-invalid\": _vm.submitted && _vm.$v.user.email.$error\n                    },\n                    attrs: { type: \"email\", id: \"email\", name: \"email\" },\n                    domProps: { value: _vm.user.email },\n                    on: {\n                      input: function($event) {\n                        if ($event.target.composing) {\n                          return\n                        }\n                        _vm.$set(_vm.user, \"email\", $event.target.value)\n                      }\n                    }\n                  }),\n                  _vm.submitted && _vm.$v.user.email.$error\n                    ? _c(\"div\", { staticClass: \"invalid-feedback\" }, [\n                        !_vm.$v.user.email.required\n                          ? _c(\"span\", [_vm._v(\"Email is required\")])\n                          : _vm._e(),\n                        !_vm.$v.user.email.email\n                          ? _c(\"span\", [_vm._v(\"Email is invalid\")])\n                          : _vm._e()\n                      ])\n                    : _vm._e()\n                ]),\n                _c(\"div\", { staticClass: \"form-group\" }, [\n                  _c(\"label\", { attrs: { for: \"password\" } }, [\n                    _vm._v(\"Password\")\n                  ]),\n                  _c(\"input\", {\n                    directives: [\n                      {\n                        name: \"model\",\n                        rawName: \"v-model\",\n                        value: _vm.user.password,\n                        expression: \"user.password\"\n                      }\n                    ],\n                    staticClass: \"form-control\",\n                    class: {\n                      \"is-invalid\": _vm.submitted && _vm.$v.user.password.$error\n                    },\n                    attrs: {\n                      type: \"password\",\n                      id: \"password\",\n                      name: \"password\"\n                    },\n                    domProps: { value: _vm.user.password },\n                    on: {\n                      input: function($event) {\n                        if ($event.target.composing) {\n                          return\n                        }\n                        _vm.$set(_vm.user, \"password\", $event.target.value)\n                      }\n                    }\n                  }),\n                  _vm.submitted && _vm.$v.user.password.$error\n                    ? _c(\"div\", { staticClass: \"invalid-feedback\" }, [\n                        !_vm.$v.user.password.required\n                          ? _c(\"span\", [_vm._v(\"Password is required\")])\n                          : _vm._e(),\n                        !_vm.$v.user.password.minLength\n                          ? _c(\"span\", [\n                              _vm._v(\"Password must be at least 6 characters\")\n                            ])\n                          : _vm._e()\n                      ])\n                    : _vm._e()\n                ]),\n                _c(\"div\", { staticClass: \"form-group\" }, [\n                  _c(\"label\", { attrs: { for: \"confirmPassword\" } }, [\n                    _vm._v(\"Confirm Password\")\n                  ]),\n                  _c(\"input\", {\n                    directives: [\n                      {\n                        name: \"model\",\n                        rawName: \"v-model\",\n                        value: _vm.user.confirmPassword,\n                        expression: \"user.confirmPassword\"\n                      }\n                    ],\n                    staticClass: \"form-control\",\n                    class: {\n                      \"is-invalid\":\n                        _vm.submitted && _vm.$v.user.confirmPassword.$error\n                    },\n                    attrs: {\n                      type: \"password\",\n                      id: \"confirmPassword\",\n                      name: \"confirmPassword\"\n                    },\n                    domProps: { value: _vm.user.confirmPassword },\n                    on: {\n                      input: function($event) {\n                        if ($event.target.composing) {\n                          return\n                        }\n                        _vm.$set(\n                          _vm.user,\n                          \"confirmPassword\",\n                          $event.target.value\n                        )\n                      }\n                    }\n                  }),\n                  _vm.submitted && _vm.$v.user.confirmPassword.$error\n                    ? _c(\"div\", { staticClass: \"invalid-feedback\" }, [\n                        !_vm.$v.user.confirmPassword.required\n                          ? _c(\"span\", [_vm._v(\"Confirm Password is required\")])\n                          : !_vm.$v.user.confirmPassword.sameAsPassword\n                          ? _c(\"span\", [_vm._v(\"Passwords must match\")])\n                          : _vm._e()\n                      ])\n                    : _vm._e()\n                ]),\n                _vm._m(0)\n              ]\n            )\n          ])\n        ])\n      ])\n    ]),\n    _vm._m(1)\n  ])\n}\nvar staticRenderFns = [\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"form-group\" }, [\n      _c(\"button\", { staticClass: \"btn btn-primary\" }, [_vm._v(\"Register\")])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\n      \"div\",\n      {\n        staticClass: \"col-md-12\",\n        staticStyle: { \"padding-bottom\": \"50px\", \"padding-top\": \"30px\" }\n      },\n      [\n        _c(\"iframe\", {\n          staticStyle: { border: \"0\" },\n          attrs: {\n            src:\n              \"https://www.google.com/maps/embed?pb=!1m14!1m12!1m3!1d9530.589821233867!2d23.79369107308326!3d44.330633768367484!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!5e0!3m2!1sen!2sro!4v1555750530748!5m2!1sen!2sro\",\n            width: \"100%\",\n            height: \"400\",\n            frameborder: \"0\",\n            allowfullscreen: \"\"\n          }\n        })\n      ]\n    )\n  }\n]\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}