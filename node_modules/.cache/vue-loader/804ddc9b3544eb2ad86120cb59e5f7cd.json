{"remainingRequest":"C:\\Users\\Dazek\\Desktop\\app\\app1\\app1\\vue-cli\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Dazek\\Desktop\\app\\app1\\app1\\vue-cli\\src\\components\\FormComponent.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Dazek\\Desktop\\app\\app1\\app1\\vue-cli\\src\\components\\FormComponent.vue","mtime":1555788175791},{"path":"C:\\Users\\Dazek\\Desktop\\app\\app1\\app1\\vue-cli\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Dazek\\Desktop\\app\\app1\\app1\\vue-cli\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Dazek\\Desktop\\app\\app1\\app1\\vue-cli\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Dazek\\Desktop\\app\\app1\\app1\\vue-cli\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { required, email, minLength, sameAs } from \"vuelidate/lib/validators\";\n\nexport default {\n    name: \"app1\",\n    data() {\n        return {\n            user: {\n                firstName: \"\",\n                lastName: \"\",\n                email: \"\",\n                password: \"\",\n                confirmPassword: \"\"\n            },\n            submitted: false\n        };\n    },\n    validations: {\n        user: {\n            firstName: { required },\n            lastName: { required },\n            email: { required, email },\n            password: { required, minLength: minLength(6) },\n            confirmPassword: { required, sameAsPassword: sameAs('password') }\n        }\n    },\n    methods: {\n        handleSubmit(e) {\n            this.submitted = true;\n\n            // stop here if form is invalid\n            this.$v.$touch();\n            if (this.$v.$invalid) {\n                return;\n            }\n\n            alert(\"SUCCESS!! :-)\\n\\n\");\n        }\n    }\n};\n",{"version":3,"sources":["FormComponent.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"FormComponent.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n    <div class=\"col-md-12 form\">\r\n        <div class=\"container\">\r\n            <div class=\"row\">\r\n                \r\n                <div class=\"col-sm-8 offset-sm-2\">\r\n                    <div>\r\n                        <h2 >Register now</h2>\r\n                        <p style=\"padding-bottom:30px;\"> For more features âœ” </p>\r\n                        <form @submit.prevent=\"handleSubmit\">\r\n                            <div class=\"form-group\">\r\n                                <label for=\"firstName\">First Name</label>\r\n                                <input type=\"text\" v-model=\"user.firstName\" id=\"firstName\" name=\"firstName\" class=\"form-control\" :class=\"{ 'is-invalid': submitted && $v.user.firstName.$error }\" />\r\n                                <div v-if=\"submitted && !$v.user.firstName.required\" class=\"invalid-feedback\">First Name is required</div>\r\n                            </div>\r\n                            <div class=\"form-group\">\r\n                                <label for=\"lastName\">Last Name</label>\r\n                                <input type=\"text\" v-model=\"user.lastName\" id=\"lastName\" name=\"lastName\" class=\"form-control\" :class=\"{ 'is-invalid': submitted && $v.user.lastName.$error }\" />\r\n                                <div v-if=\"submitted && !$v.user.lastName.required\" class=\"invalid-feedback\">Last Name is required</div>\r\n                            </div>\r\n                            <div class=\"form-group\">\r\n                                <label for=\"email\">Email</label>\r\n                                <input type=\"email\" v-model=\"user.email\" id=\"email\" name=\"email\" class=\"form-control\" :class=\"{ 'is-invalid': submitted && $v.user.email.$error }\" />\r\n                                <div v-if=\"submitted && $v.user.email.$error\" class=\"invalid-feedback\">\r\n                                    <span v-if=\"!$v.user.email.required\">Email is required</span>\r\n                                    <span v-if=\"!$v.user.email.email\">Email is invalid</span>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"form-group\">\r\n                                <label for=\"password\">Password</label>\r\n                                <input type=\"password\" v-model=\"user.password\" id=\"password\" name=\"password\" class=\"form-control\" :class=\"{ 'is-invalid': submitted && $v.user.password.$error }\" />\r\n                                <div v-if=\"submitted && $v.user.password.$error\" class=\"invalid-feedback\">\r\n                                    <span v-if=\"!$v.user.password.required\">Password is required</span>\r\n                                    <span v-if=\"!$v.user.password.minLength\">Password must be at least 6 characters</span>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"form-group\">\r\n                                <label for=\"confirmPassword\">Confirm Password</label>\r\n                                <input type=\"password\" v-model=\"user.confirmPassword\" id=\"confirmPassword\" name=\"confirmPassword\" class=\"form-control\" :class=\"{ 'is-invalid': submitted && $v.user.confirmPassword.$error }\" />\r\n                                <div v-if=\"submitted && $v.user.confirmPassword.$error\" class=\"invalid-feedback\">\r\n                                    <span v-if=\"!$v.user.confirmPassword.required\">Confirm Password is required</span>\r\n                                    <span v-else-if=\"!$v.user.confirmPassword.sameAsPassword\">Passwords must match</span>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"form-group\">\r\n                                <button class=\"btn btn-primary\">Register</button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n  <div class=\"col-md-12\" style=\"padding-bottom:50px; padding-top:30px;\">\r\n        <iframe src=\"https://www.google.com/maps/embed?pb=!1m14!1m12!1m3!1d9530.589821233867!2d23.79369107308326!3d44.330633768367484!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!5e0!3m2!1sen!2sro!4v1555750530748!5m2!1sen!2sro\"\r\n         width=\"100%\" height=\"400\" frameborder=\"0\" style=\"border:0\" allowfullscreen></iframe>\r\n        </div>\r\n \r\n    </div>\r\n\r\n\r\n</template>\r\n\r\n<script>\r\n    import { required, email, minLength, sameAs } from \"vuelidate/lib/validators\";\r\n\r\n    export default {\r\n        name: \"app1\",\r\n        data() {\r\n            return {\r\n                user: {\r\n                    firstName: \"\",\r\n                    lastName: \"\",\r\n                    email: \"\",\r\n                    password: \"\",\r\n                    confirmPassword: \"\"\r\n                },\r\n                submitted: false\r\n            };\r\n        },\r\n        validations: {\r\n            user: {\r\n                firstName: { required },\r\n                lastName: { required },\r\n                email: { required, email },\r\n                password: { required, minLength: minLength(6) },\r\n                confirmPassword: { required, sameAsPassword: sameAs('password') }\r\n            }\r\n        },\r\n        methods: {\r\n            handleSubmit(e) {\r\n                this.submitted = true;\r\n\r\n                // stop here if form is invalid\r\n                this.$v.$touch();\r\n                if (this.$v.$invalid) {\r\n                    return;\r\n                }\r\n\r\n                alert(\"SUCCESS!! :-)\\n\\n\");\r\n            }\r\n        }\r\n    };\r\n</script>\r\n\r\n<style>\r\n.form {\r\n    padding-top:50px;\r\n}\r\n\r\n\r\n</style>"]}]}